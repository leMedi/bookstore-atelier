[main]
user = com.hazy.bookstore.shiro.FacesAjaxAwareUserFilter
user.loginUrl = /login.xhtml

# Create JDBC realm.
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

# Configure JNDI Database realm datasource.
dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceName = jdbc/mysql_bookstore
jdbcRealm.dataSource = $dataSource

# Configure JDBC realm SQL queries.
jdbcRealm.authenticationQuery = SELECT password FROM users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT name FROM roles WHERE id IN (SELECT role_id FROM user_roles WHERE user_id = (SELECT id FROM users WHERE username = ?))
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.permissionsQuery = SELECT name FROM permissions WHERE id IN (SELECT permission_id FROM roles_permissions WHERE role_id = (SELECT id FROM roles WHERE name = ?))

passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
# TODO : Custimisation stuff later

passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher

passwordMatcher.passwordService = $passwordService

# Configure JDBC realm password hashing.
jdbcRealm.credentialsMatcher = $passwordMatcher

[roles]
#ROLE_ADMIN = *
#ROLE_USER = BOOKS:CREATE

[users]
#admin = hazy, ROLE_ADMIN
#hamzy = jiher, ROLE_USER

[urls]
# use remember me to protected the url  /admin/** role admin /user/** role user but for a specific page maybe permisssions
/edit-book.xhtml = user, perms["BOOKS:UPDATE"]
/new-book.xhtml = user, perms["BOOKS:CREATE"]
/login.xhtml = user